using System.Collections;

class MyDictionary<TKey, TValue> : IEnumerable
{
    private TKey[] keys;
    private TValue[] values;
    private int count;

    public MyDictionary()
    {
        keys = new TKey[0];
        values = new TValue[0];
        count = 0;
    }

    public void Add(TKey key, TValue value)
    {
        Array.Resize(ref keys, count + 1);
        Array.Resize(ref values, count + 1);

        keys[count] = key;
        values[count] = value;
        count++;
    }

    public TValue this[TKey key]
    {
        get
        {
            for (int i = 0; i < count; i++)
            {
                if (keys[i].Equals(key))
                {
                    return values[i];
                }
            }
            throw new KeyNotFoundException();
        }
    }

    public int Count
    {
        get { return count; }
    }

    public IEnumerator GetEnumerator()
    {
        for (int i = 0; i < count; i++)
        {
            yield return new KeyValuePair<TKey, TValue>(keys[i], values[i]);
        }
    }
}

class KeyValuePair<TKey, TValue>
{
    public TKey Key { get; set; }
    public TValue Value { get; set; }

    public KeyValuePair(TKey key, TValue value)
    {
        Key = key;
        Value = value;
    }
}

class Program
{
    static void Main(string[] args)
    {
        MyDictionary<int, string> myDictionary = new MyDictionary<int, string>();

        myDictionary.Add(1, "One"); // Добавляем элементы в словарь
        myDictionary.Add(2, "Two");

        Console.WriteLine("Элементы словаря:");

        foreach (var kvp in myDictionary) // Перебираем элементы словаря
        {
            Console.WriteLine("Key: {0}, Value: {1}");
        }

        Console.WriteLine("Значение элемента со ключом 1: {0}", myDictionary[1]); // Получаем значение элемента по ключу
        Console.WriteLine("Значение элемента со ключом 2: {0}", myDictionary[2]);
    }
